---
Title: Webservereinstellungen
Sidebar: sidebar-de
Language: de
---
Wie man unterschiedliche [Webserver](http://news.netcraft.com/archives/category/web-server-survey/) konfiguriert.

## Apache

Die `.htaccess` Konfigurationsdatei für den [Apache](http://httpd.apache.org)-Webserver:

```apache
<IfModule mod_rewrite.c>
RewriteEngine on

DirectoryIndex index.html yellow.php
RewriteRule ^(cache|content|system)/ error [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^ yellow.php [L]
</IfModule>
```
Auf einem gemeinsam benutzen Webserver fügt man `RewriteBase` hinzu:

```apache
<IfModule mod_rewrite.c>
RewriteEngine on
RewriteBase /~userid/
DirectoryIndex index.html yellow.php
RewriteRule ^(cache|content|system)/ error [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^ yellow.php [L]
</IfModule>
```

Auf seinem eigenem Webserver aktiviert man das Rewrite-Modul, man muss ausserdem noch `AllowOverride All` konfigurieren. [Hier ist ein Beispiel](http://stackoverflow.com/questions/18740419/how-to-set-allowoverride-all). Sobald das konfiguriert ist sollte deine Webseite funktionieren. Frage deinen Webhoster um Hilfe falls Probleme auftreten.

## Nginx

Die `nginx.conf` Konfigurationsdatei für den [Nginx](http://nginx.org/)-Webserver:

```nginx
server {
    listen 80;
    server_name website.com;
    root /var/www/website/;
    index index.html yellow.php;

    location /cache {
        rewrite ^(.*)$ /error break;
    }

    location /content {
        rewrite ^(.*)$ /error break;
    }

    location /system {
        rewrite ^(.*)$ /error break;
    }

    location / {
        if (!-e $request_filename) {
            rewrite ^/(.*)$ /yellow.php last;
            break;
        }
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index yellow.php;
        include fastcgi_params;
    }
}
```

## Statische Webseite

Yellow ist ein Flat-File-CMS und ein Static-Site-Generator. Um statische Seiten zu erstellen führt man einen Build-Befehl im Verzeichnis der Yellow-Installation aus. Daraufhin wird eine komplett statische Webseite erstellt.

Du kannst statische Seiten in der [Befehlszeile](https://github.com/datenstrom/yellow-plugins/tree/master/commandline) erstellen:

1. Öffne ein Terminal-Fenster.
2. Gehe zu deiner Yellow-Installation, dort wo sich die `yellow.php` befindet.
3. Gib die folgende Zeile ein: `php yellow.php build /var/www/website`

Das erstellt eine komplett statische Webseite im Verzeichnis `/var/www/website`. Eine statische Webseite braucht keine Yellow-Installation mehr. Die meisten Webseiten lassen sich damit erstellen. Lade Verzeichnis auf dein Webhosting hoch und erstelle bei Bedarf eine neue Version.

Vor der ersten Benutzung sollte man die Datei `system/config/config.ini` konfigurieren. Dort stellt man `ServerScheme`, `ServerName`, `ServerBase` und `ServerTime` ein. Um die [aktuellen Einstellungen](https://github.com/datenstrom/yellow-plugins/tree/master/core#example) zu sehen fügt man `[yellow server]` zum Text einer Seite hinzu.

Als Alternative zu einer statischen Webseite kann man auch einzelne Webseiten zum Cache hinzufügen. Hier ist ein Beispiel: `php yellow.php build cache /blog/blog-example`. Zum Löschen gibt man die folgende Zeile ein: `php yellow.php clean`.

## Eigene 404-Seite

Wenn der Webbrowser eine Datei anfragt die der Webserver nicht finden kann wird "File not found" ausgegeben. Die Datei `system/config/page-error-404.txt` legt fest wie eine fehlende Datei aussieht. Hier ist ein Beispiel:

~~~~
---
Title: File not found
---
The requested file was not found. Oh no...
~~~~

Falls du Yellow als Flat-File-CMS benutzt, gibt es nichts weiteres zu tun. Falls du Yellow als Static-Site-Generator benutzt, gibt es einen zusätzlichen Schritt. Konfiguriere deinen Webserver so, dass er deine eigene Fehlerseite anzeigt statt der eingebauten 404-Seite.

Bei [Apache](http://httpd.apache.org) fügt man das Folgende zur Konfigurationsdatei hinzu:

    ErrorDocument 404 /404.html

Bei [Nginx](http://nginx.org/) fügt man das Folgende zur Konfigurationsdatei hinzu:

    error_page 404 /404.html;

[Weiter: Spracheinstellungen →](language-configuration-de)