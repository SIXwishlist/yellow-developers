---
Title: Webservereinstellungen
Sidebar: sidebar-de
Language: de
---
Wie man unterschiedliche [Webserver](http://news.netcraft.com/archives/category/web-server-survey/) konfiguriert.

## Apache

Die `.htaccess` Konfigurationsdatei für den [Apache](http://httpd.apache.org)-Webserver:

```apache
<IfModule mod_rewrite.c>
RewriteEngine on

DirectoryIndex index.html yellow.php
RewriteRule ^(cache|content|system)/ error [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^ yellow.php [L]
</IfModule>
```

Wenn deine Webseite nicht funktioniert, überprüfe bitte die folgenden Schritte. Falls Yellow in einem Unterverzeichnis installiert wurde, sollte man `RewriteBase` zur Konfigurationsdatei hinzufügen. Das behebt die meisten Webserver-Probleme. Hier ist ein Beispiel:


```apache
<IfModule mod_rewrite.c>
RewriteEngine on
RewriteBase /yellow/
DirectoryIndex index.html yellow.php
RewriteRule ^(cache|content|system)/ error [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^ yellow.php [L]
</IfModule>
```

Wenn deine Webseite immer noch nicht funktioniert, überprüfe bitte den Apache-Webserver. Falls Yellow auf einem selbst-gehosteten Webserver installiert wurde, muss das [Rewrite-Modul](http://stackoverflow.com/questions/18740419/how-to-set-allowoverride-all) aktiviert werden und `AllowOverride All` im Webserver konfiguriert werden. 

Stelle sicher dass der Webserver Dateien lesen und schreiben kann. Du kannst [Schreibrechte](http://superuser.com/questions/51838/recursive-chmod-rw-for-files-rwx-for-directories) für Dateien manuell angleichen, zum Beispiel mit `chmod -R a+rw *`. Als Alternative kannst du Webserver und Benutzern die Gruppe `www-data` und `umask 002` zuweisen. 

## Nginx

Die `nginx.conf` Konfigurationsdatei für den [Nginx](http://nginx.org/)-Webserver:

```nginx
server {
    listen 80;
    server_name website.com;
    root /var/www/website/;
    index index.html yellow.php;

    location /cache {
        rewrite ^(.*)$ /error break;
    }

    location /content {
        rewrite ^(.*)$ /error break;
    }

    location /system {
        rewrite ^(.*)$ /error break;
    }

    location / {
        if (!-e $request_filename) {
            rewrite ^/(.*)$ /yellow.php last;
            break;
        }
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index yellow.php;
        include fastcgi_params;
    }
}
```

## Statische Webseite

Yellow ist ein Flat-File-CMS und ein Static-Site-Generator. Um statische Seiten zu erstellen führt man einen Build-Befehl im Verzeichnis der Yellow-Installation aus. Daraufhin wird eine komplett statische Webseite erstellt, die auf jedem Webserver funktioniert.

Du kannst eine statische Webseite in der [Befehlszeile](https://github.com/datenstrom/yellow-plugins/tree/master/commandline) erstellen:

1. Öffne ein Terminal-Fenster.
2. Gehe zu deiner Yellow-Installation, dort wo sich die `yellow.php` befindet.
3. Gib die folgende Zeile ein: `php yellow.php build /var/www/website`

Das erstellt eine komplett statische Webseite im Verzeichnis `/var/www/website`. Eine statische Webseite braucht keine Yellow-Installation mehr. Die meisten Webseiten lassen sich damit erstellen. Lade Verzeichnis auf dein Webhosting hoch und erstelle bei Bedarf eine neue Version.

Als Alternative zu einer statischen Webseite kann man auch einzelne Seiten zum Cache hinzufügen. Hier ist ein Beispiel: `php yellow.php build cache /blog/blog-example`. Zum Löschen des Caches gibt man die folgende Zeile ein: `php yellow.php clean`.

## Fehlerseite

Falls Probleme auftreten wird eine Fehlerseite angezeigt. Wenn der Webbrowser eine Datei anfragt die der Webserver nicht finden kann wird "File not found" ausgegeben. Die Datei `system/config/page-error-404.txt` legt fest wie eine fehlende Datei aussieht:

~~~~
---
Title: File not found
---
The requested file was not found. Oh no...
~~~~

Falls du Yellow als Flat-File-CMS benutzt, gibt es nichts weiteres zu tun. Falls du Yellow benutzt um eine statische Webseite zu erstellen, gibt es einen zusätzlichen Schritt. Konfiguriere deinen Webserver so, dass er deine eigene Fehlerseite anzeigt statt der eingebauten 404-Seite.

Bei [Apache](http://httpd.apache.org) fügt man das Folgende zur Konfigurationsdatei hinzu:

    ErrorDocument 404 /404.html

Bei [Nginx](http://nginx.org/) fügt man das Folgende zur Konfigurationsdatei hinzu:

    error_page 404 /404.html;

[Weiter: Spracheinstellungen →](language-configuration-de)