---
Title: Yellow-Themes
Sidebar: sidebar-de
Language: de
---
Du kannst das Aussehen deiner Webseite anpassen.

## Themes

Themes bestimmen das Aussehen deiner Webseite. Das Standardtheme wird in der Datei `system/config/config.ini` festgelegt. Eine anderes Theme lässt sich in den [Einstellungen](markdown-cheat-sheet-de#einstellungen) ganz oben auf jeder Seite festlegen, zum Beispiel `Theme: flatsite`. 

## CSS

Um ein Theme anzupassen, kann man [CSS](http://www.w3schools.com/css/) benutzen. Du kannst eine CSS-Datei mit dem Namen eines `content`-Verzeichnisses erstellen und sie wird automatisch benutzt. Alle CSS-Dateien sollten einen einmaligen Namen und Versionsnummer besitzen.

Hier ist eine Beispiel-CSS-Datei `system/themes/home.css`:

``` css
/* Theme: Home theme */
/* Version: 0.1.1 */
/* Designer: Mark Mayberg */

html, body, div, form, pre, span, tr, th, td { margin:0; padding:0; border:0; vertical-align:baseline; }
body { background-color:#fff; color:#717171; margin:1em; }
h1, h2, h3, h4, h5, h6 { color:#07d; font-weight:normal; }
a { color:#07d; text-decoration:none; }
a:hover { color:#07d; text-decoration:underline; }
.sitename a { color:#000; text-decoration:none; }
.navigation a { color:#07d; padding-right:0.3em; }
.navigation ul { padding:0; list-style:none; }
.navigation li { display:inline; }
```

Hier ist die selbe CSS-Datei mit dunkler Hintergrundfarbe:

``` css
/* Theme: Home theme */
/* Version: 0.1.2 */
/* Designer: Mark Mayberg */

html, body, div, form, pre, span, tr, th, td { margin:0; padding:0; border:0; vertical-align:baseline; }
body { background-color:#000; color:#ddd; margin:1em; }
h1, h2, h3, h4, h5, h6 { color:#fff; font-weight:normal; }
a { color:#29f; text-decoration:none; }
a:hover { color:#29f; text-decoration:underline; }
.sitename a { color:#fff; text-decoration:none; }
.navigation a { color:#29f; padding-right:0.3em; }
.navigation ul { padding:0; list-style:none; }
.navigation li { display:inline; }
```

## JavaScript

Um ein Theme zu erweitern, kann man [JavaScript](http://www.w3schools.com/js/) benutzen. Du kannst eine JS-Datei mit dem Namen eines Themes erstellen und sie wird automatisch benutzt. Das ermöglicht es beliebige dynamische Funktionen mit Yellow zu erstellen.

Hier ist eine Beispiel-JS-Datei `system/themes/assets/home.js`:

``` javascript
var ready = function() 
{
	console.log("Hello world");
	// Add more JavaScript code here
}
if(window.addEventListener) {
	window.addEventListener("load", ready, false);
} else {
	window.attachEvent("onload", ready);
}
```

## Icon

Jede Webseite hat ein kleines Icon das stellvertretend für sie ist. Das Standardicon wird in der Datei `system/config/config.ini` festgelegt. Eine anderes Icon lässt sich in den [Einstellungen](markdown-cheat-sheet-de#einstellungen) auf jeder Seite festlegen, zum Beispiel `Siteicon: icon`.

Um das Standardicon zu ändern überschreibe die Datei `system/themes/assets/icon.png`.

[Weiter: Yellow-Templates →](yellow-templates-de)
